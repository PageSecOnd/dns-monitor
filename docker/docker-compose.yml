version: '3.8'

services:
  dns-monitor:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        APT_MIRROR: ${APT_MIRROR:-mirrors.aliyun.com}
        PIP_MIRROR: ${PIP_MIRROR:-mirrors.aliyun.com}
        USE_CHINA_MIRRORS: ${USE_CHINA_MIRRORS:-true}
    container_name: dns-monitor
    restart: unless-stopped
    ports:
      - "80:80"
      - "5000:5000"
    volumes:
      - dns-monitor-data:/app/backend/data
      - dns-monitor-logs:/app/logs
      - /var/log/named:/var/log/named:ro  # Mount BIND9 logs (read-only)
      - /var/log/bind:/var/log/bind:ro    # Alternative BIND9 log location
      - /etc/bind:/etc/bind:ro            # BIND9 configuration (read-only)
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - DNS_MONITOR_HOST=0.0.0.0
      - DNS_MONITOR_PORT=5000
      - BIND_LOG_PATH=/var/log/named/query.log
      - DATABASE_PATH=/app/backend/data/dns_monitor.db
    networks:
      - dns-monitor-network
    depends_on:
      - nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: dns-monitor-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../frontend:/usr/share/nginx/html:ro
      - dns-monitor-logs:/var/log/nginx
    networks:
      - dns-monitor-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  dns-monitor-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  dns-monitor-data:
    driver: local
  dns-monitor-logs:
    driver: local